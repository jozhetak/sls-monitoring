functions:
  createUser:
    handler: src/api/users/users.create
    package:
      include:
        - src/api/users/**
        - src/api/passport/**
        - src/shared/**
    events:
      - http:
          path: users
          method: post

  listUsers:
    handler: src/api/users/users.list
    package:
      include:
        - src/api/users/**
        - src/api/passport/**
        - src/shared/**
    events:
      - http:
          path: users
          method: get
#          authorizer:
#            name: authorize
#            identitySource: method.request.header.Authorization
#            type: token
  getUser:
    handler: src/api/users/users.get
    package:
      include:
        - src/api/users/**
        - src/api/passport/**
        - src/shared/**
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
#          authorizer:
#            name: authorize
#            identitySource: method.request.header.Authorization
#            type: token
  updateUser:
    handler: src/api/users/users.update
    package:
      include:
        - src/api/users/**
        - src/api/passport/**
        - src/shared/**
    events:
      - http:
          path: users/{id}
          method: put
          cors: true,
#          authorizer:
#            name: authorize
#            identitySource: method.request.header.Authorization
#            type: token
  deleteUser:
    handler: src/api/users/users.delete
    package:
      include:
        - src/api/users/**
        - src/api/passport/**
        - src/shared/**
    events:
      - http:
          path: users/{id}
          method: delete
          cors: true
#          authorizer:
#            name: authorize
#            identitySource: method.request.header.Authorization
#            type: token
  changePassword:
    handler: src/api/users/users.changePassword
    package:
      include:
        - src/api/users/**
        - src/api/passport/**
        - src/shared/**
    events:
      - http:
          path: users/{id}/password
          method: put
          cors: true
  verifyUser:
    handler: src/api/users/users.verify
    package:
      include:
        - src/api/users/**
        - src/api/passport/**
        - src/shared/**
    events:
      - http:
          path: users/{id}/verify/{token}
          method: get
          cors: true
  sendResetPasswordEmail:
    handler: src/api/users/users.sendResetPasswordEmail
    package:
      include:
        - src/api/users/**
        - src/api/passport/**
        - src/shared/**
    events:
      - http:
          path: users/{id}/resetEmail
          method: post
          cors: true
  sendVerificationEmail:
    handler: src/api/users/users.sendVerificationEmail
    package:
      include:
        - src/api/users/**
        - src/api/passport/**
        - src/shared/**
    events:
      - http:
          path: users/{id}/verificationEmail
          method: post
          cors: true